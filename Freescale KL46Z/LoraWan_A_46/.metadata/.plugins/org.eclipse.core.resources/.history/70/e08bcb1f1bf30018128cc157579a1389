/*
 * The Clear BSD License
 * Copyright (c) 2016, Freescale Semiconductor, Inc.
 * Copyright 2016-2017 NXP
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted (subject to the limitations in the disclaimer below) provided
 * that the following conditions are met:
 *
 * o Redistributions of source code must retain the above copyright notice, this list
 *   of conditions and the following disclaimer.
 *
 * o Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 *
 * o Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS LICENSE.
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* clang-format off */
/*
 * TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
!!GlobalInfo
product: Pins v3.0
processor: MKL46Z256xxx4
package_id: MKL46Z256VLL4
mcu_data: ksdk2_0
processor_version: 0.0.9
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS ***********
 */
/* clang-format on */

#include "fsl_common.h"
#include "fsl_port.h"
#include "fsl_gpio.h"
#include "MKL46Z4.h"
#include "pin_mux.h"



/* clang-format off */
/*
 * TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
BOARD_InitPins:
- options: {callFromInitBoot: 'true', coreID: core0, enableClock: 'true'}
- pin_list:
  - {pin_num: '35', peripheral: UART0, signal: RX, pin_signal: TSI0_CH2/PTA1/UART0_RX/TPM2_CH0}
  - {pin_num: '36', peripheral: UART0, signal: TX, pin_signal: TSI0_CH3/PTA2/UART0_TX/TPM2_CH1}
  - {pin_num: '44', peripheral: SPI0, signal: PCS0, pin_signal: PTA14/SPI0_PCS0/UART0_TX/I2S0_RX_BCLK/I2S0_TXD0}
  - {pin_num: '45', peripheral: SPI0, signal: SCK, pin_signal: PTA15/SPI0_SCK/UART0_RX/I2S0_RXD0}
  - {pin_num: '46', peripheral: SPI0, signal: MOSI, pin_signal: PTA16/SPI0_MOSI/SPI0_MISO/I2S0_RX_FS/I2S0_RXD0}
  - {pin_num: '47', peripheral: SPI0, signal: MISO, pin_signal: PTA17/SPI0_MISO/SPI0_MOSI/I2S0_MCLK}
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS ***********
 */
/* clang-format on */

/* FUNCTION ************************************************************************************************************
 *
 * Function Name : BOARD_InitPins
 * Description   : Configures pin routing and optionally pin electrical features.
 *
 * END ****************************************************************************************************************/
void BOARD_InitPins(void)
{

    /* Port A Clock Gate Control: Clock enabled */
    CLOCK_EnableClock(kCLOCK_PortA);

    /* Port A Clock Gate Control: Clock enabled */
    CLOCK_EnableClock(kCLOCK_PortC);

    //Clok
    PORT_SetPinMux(PORTA, 18,  kPORT_PinDisabledOrAnalog);
    PORT_SetPinMux(PORTA,19,  kPORT_PinDisabledOrAnalog);

    //Reset
	gpio_pin_config_t gpioc_pin13_config = {
		        kGPIO_DigitalOutput,0,
	};
	GPIO_PinInit(GPIOC, 13U, &gpioc_pin13_config);
	PORT_SetPinMux(PORTC, 13U, kPORT_MuxAsGpio);

    //DIO 0
    gpio_pin_config_t gpioa_pin6_config = {
    			 kGPIO_DigitalInput,0,
    		};
    PORT_SetPinInterruptConfig(PORTA, 6U, kPORT_InterruptFallingEdge);
    EnableIRQ(PORTA_IRQn);
    GPIO_PinInit(GPIOA, 6U, &gpioa_pin6_config);
    PORT_SetPinMux(PORTA, 6U, kPORT_MuxAsGpio);

    //DIO 1
	gpio_pin_config_t gpioa_pin7_config = {
			 kGPIO_DigitalInput,0,
			};
	PORT_SetPinInterruptConfig(PORTA, 7U, kPORT_InterruptFallingEdge);
	EnableIRQ(PORTA_IRQn);
	GPIO_PinInit(GPIOA, 7U, &gpioa_pin7_config);
	PORT_SetPinMux(PORTA, 7U, kPORT_MuxAsGpio);

    //DIO 2
	gpio_pin_config_t gpioa_pin13_config = {
			 kGPIO_DigitalInput,0,
				};
	PORT_SetPinInterruptConfig(PORTA, 13U, kPORT_InterruptFallingEdge);
	GPIO_PinInit(GPIOA, 13U, &gpioa_pin13_config);
	PORT_SetPinMux(PORTA, 13U, kPORT_MuxAsGpio);


    //DIO 3
	gpio_pin_config_t gpia_pin5_config = {
			 kGPIO_DigitalInput,0,
			};
	PORT_SetPinInterruptConfig(PORTA, 5U, kPORT_InterruptFallingEdge);
	EnableIRQ(PORTC_PORTD_IRQn);
	GPIO_PinInit(GPIOA, 5U, &gpioc_pin5_config);
	PORT_SetPinMux(PORTA, 5U, kPORT_MuxAsGpio);


   // NSS - A la vieja escuela PTA-14
    /* PORTA14 (pin 44) is configured as SPI0_PCS0 */
	gpio_pin_config_t gpioa_pin14_config = {
			        kGPIO_DigitalOutput,0,
		};
	GPIO_PinInit(GPIOA, 14U, &gpioa_pin14_config);
	PORT_SetPinMux(PORTA, 14U, kPORT_MuxAsGpio);

    /* PORTA15 (pin 45) is configured as SPI0_SCK */
    PORT_SetPinMux(PORTA, 15U, kPORT_MuxAlt2);

    /* PORTA16 (pin 46) is configured as SPI0_MOSI */
    PORT_SetPinMux(PORTA, 16U, kPORT_MuxAlt2);

    /* PORTA17 (pin 47) is configured as SPI0_MISO */
    PORT_SetPinMux(PORTA, 17U, kPORT_MuxAlt2);


    /* PORTA1 (pin 35) is configured as UART0_RX */
    PORT_SetPinMux(PORTA, 1U, kPORT_MuxAlt2);

    /* PORTA2 (pin 36) is configured as UART0_TX */
    PORT_SetPinMux(PORTA, 2U, kPORT_MuxAlt2);

    SIM->SOPT5 = ((SIM->SOPT5 &
                   /* Mask bits to zero which are setting */
                   (~(SIM_SOPT5_UART0TXSRC_MASK | SIM_SOPT5_UART0RXSRC_MASK)))

                  /* UART0 Transmit Data Source Select: UART0_TX pin. */
                  | SIM_SOPT5_UART0TXSRC(SOPT5_UART0TXSRC_UART_TX)

                  /* UART0 Receive Data Source Select: UART_RX pin. */
                  | SIM_SOPT5_UART0RXSRC(SOPT5_UART0RXSRC_UART_RX));
}
/***********************************************************************************************************************
 * EOF
 **********************************************************************************************************************/
